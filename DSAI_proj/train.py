# AUTOGENERATED! DO NOT EDIT! File to edit: 05_train.ipynb (unless otherwise specified).

__all__ = ['TagLineLoss', 'splitter_func']

# Internal Cell

from transformers import DistilBertTokenizer
from fastai.data.core import DataLoaders
from fastai.vision.all import *
from .dataset import *
from .model import *
from fastai.vision import *
from torch import nn
import torch

# Cell

class TagLineLoss(nn.Module):

    def __init__(self):
        super(TagLineLoss, self).__init__()
        self.criterion = torch.nn.CrossEntropyLoss()

    def forward(self, output, target):
        x = F.log_softmax(output, dim=-1).permute(0, 2, 1)
        return self.criterion(input=x, target=target)

# Cell

def splitter_func(model: nn.Module):
    return [params(model.cnn_encoder),
            params(model.text_encoder),
            params(model.meta_encoder),
            params(model.decoder)]