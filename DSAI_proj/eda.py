# AUTOGENERATED! DO NOT EDIT! File to edit: 01_eda.ipynb (unless otherwise specified).

__all__ = ['clean_genre', 'freq_words', 'freq_words_sw']

# Internal Cell

from sklearn.utils import shuffle
from sklearn.preprocessing import MultiLabelBinarizer
from pandas import DataFrame
from collections import Counter
from nltk.corpus import stopwords
import re
import numpy as np
import seaborn as sb
import matplotlib.pyplot as plt
import matplotlib.ticker as tc
import pandas as pd
import os
import concurrent
import requests
import json

# Cell

def clean_genre(df: DataFrame) -> DataFrame:

    mlb = MultiLabelBinarizer(sparse_output=True)
    df['genres'] = [[x['name'] for x in eval(list_dict)] for list_dict in df['genres']]
    df1 = df.join(
                pd.DataFrame.sparse.from_spmatrix(
                mlb.fit_transform(df.pop('genres')),
                index=df.index,
                columns=mlb.classes_))
    return df1

# Cell

#Most frequent word function definition
def freq_words(df, var, num):
    tmpStr = ""
    for i in range(len(df)):
        tmpStr = tmpStr + " " + re.sub(r'[^\w\s]', '', df.iloc[i, df.columns.get_loc(var)])

    tmpList = tmpStr.lower().split()
    counter = Counter(tmpList)
    most_freq = counter.most_common()

    df_freq = pd.DataFrame(most_freq, columns =['Word', 'Count'])
    return df_freq.iloc[:num,:]


# Cell

# Most frequent word without stopwords function definition

def freq_words_sw(df, sw, var, num):

    tmpStr = ""
    for i in range(len(df)):
        tmpStr = tmpStr + " " + re.sub(r'[^\w\s]', '', df.iloc[i, df.columns.get_loc(var)])

    tmpList = tmpStr.lower().split()
    counter = Counter(tmpList)
    most_freq = counter.most_common()

    df_freq = pd.DataFrame(most_freq, columns =['Word', 'Count'])

    i = 0
    while i < len(df_freq):
        tmpStr = df_freq.iloc[i, df_freq.columns.get_loc('Word')]
        if tmpStr in sw:
            df_freq = df_freq.drop(index=df_freq.iloc[i].name)
            i = i - 1
        i = i + 1

    return df_freq.iloc[:num,:]